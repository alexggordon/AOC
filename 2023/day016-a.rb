#!/Users/alexggordon/.rbenv/shims/ruby
require 'active_support/all'
require 'pry'
require 'pry-byebug'
input = '\.....\....................-.....|.............|....\../.../......\....../................../.-...............
.../.................................................\............|.....-...\.....................\/........|.
................................................\.....-...................../...../......|....................
..................../.......-.../....../.........................|...........\...|......./.........\..../...|-
....\......|...............\...-.....\.........................-../...........\./.............................
|..................../............./.............-............-..\.......|-|.|.........-............|.........
.....-............................/..-\\\\...\...../...|..|..\....................|.....|........\..............
\.......................|./................|....|..-...|........|....../..............-../.../....\...........
...|..-...........................-...................-..../..-.............-........................|../.....
...-...\-..-............../.....|...............\.........../.-....-..................../....................\
-.-.......-...../..|./....|................/..-......./...........-..........|/.....-.................-....../
..........................\....\.../.......-.\/.....\.../.\.||........-....\..../.|................\....-.....
....|./..........-......-\.......................|........................\...--..\./...............-/.......|
.-|-......../.|-..........................|........--..-........../...../.../.................................
........../....-.......................................\.........|.................\..........-.|.../..|......
............/...\...../...........-..........-../.|.............-...|.........-.........\............../....\.
./..........|..-........|....-../|.......|......./......|............................-./...........-..-.......
..|..................|.................\../.........................-....../\....................\...-........
../|/.....\....-..\.................|....-..............|.\.....-....\........................-.............\.
...../..../...........|....................................\.........................../........\........./.\.
....-/..........................//....|............................\.//.........\...........................|.
............\....../-..\.-.--.....|...........\.-..../..../..........-........-......\..................|../..
....|..............\...|...............|./.........../......\.............\......................./....\......
|............\.|......................-................|...\........|..................\............|.....\...
./..|..\-................/../......../.............|..................-..............................|........
............/............-|\....................//..-.\..............-../.....\............................|..
.\-.............|...................-...-||/.......\.............|..................../...\...................
.....................-/.........|.........-.............|..........-....\..\................/.................
.../.......................................-.............|..................../.......-./........../../|..-...
.|......\................\.................|..\........./.........../.........................../.........\...
..../.......\...\......./.\......|..\....................../...../|..|..............\../...../.............|..
..............//............../.......................\....|..\......//........................|...|..\/......
........-...-.-..-........\......../..../...........|...\../.............-..................\../.......\/.....
...................................|..\............\|...|............-..............--.........\.\......./....
..........\.......-.......\...............|....../...|........../../.../...........-.....................\|...
.-...|./.........../.............-............/...../...........................-.............................
....|......................|......................-.......................................-...................
|........................-...................-...........\..............-....../..........-../................
..........-.....................|.......\.......|/......-........................../...-......\\\\.........../..
..|........../....-..-............./.........-......../................\................................-.....
...\..........\.....\.....-......\-..-..........\...........\........././.................../.................
.................|.\......\../.......\/....|..........|.......-.....\................|..-......|........./../.
......|........-..............|...................../............-....|/.......|.......-......................
...................|...................../.....-..............|\...................../......|/..........-.....
.../..........|...............--..............-.......-........................-...........\....|.............
............./........./..........\....\....../..........|...|..\.\\\\..-......\..\..|.........../..............
.....-................../..........-............|.......|..../.........|..................../....-............
...........-.....................\//.....\.................-......|/............-...../.......................
......\.......|.-/....../...../......-.......\............-|...../...................|-..|........-........|..
/....-..../.................-/.......................|...............\...............|-......-.\.............-
.........\.....-..-.................\......./.../..............|.........................|.....-..../.....-|/.
...|.............\..........-..\.....|\.\-..|..............|................|..............................-..
.|-....|......\..........\................................./.............\.................-..................
../...............-|.\.......|......|.|.............\/........../.......|.........\...-.|.........\...........
...\..................\......|.....................................|...................\|.........|\..../\....
.../.............-..............................|...................|.....\.../......|......................-.
../.|..............-..|...\...........-./..|...|..../..\................./................-.....\............/
/........................\......../......................-............|..........-/...../.....................
.................-........................-\.|.-../....................|.........................-.-.\........
.............|...-.............|.......-..-.................|.......-.........................................
....-...\..-.../..........-...-........../.................../.\....-....../........../.......................
........./..................\........................................|.-................-..|...............|..
..............-.-............................../........\..\.................|...-./................-./....|-.
..........-.........................../...............\..........\........\...................................
......-.\.......................\....\............\...........................\....-................../......\
.......-\../..........................\.......................................\|....../......-/..........-..\.
/......................................./.............|...........|/.......-.....|./..|./............|........
/........................................|................./..........-...\.........\...........-.........-...
./................\........./...........................................-.........................../../\.....
..-..\.......|.\/../-................\|\.......................................-..|.......\.\..\...........-..
.-...|...-....\.-.....|.......\..........-..../..-..........-...........//....-\........\................/....
..../..|...-..........|/.../.............\...................\............-.....|......../.................../
/..\.............\.....|....................-........../...........\..\.|........|.........\......\......../..
.........................-...-................................|..........|.......-.\......../...../....|.....\
..\................./............../............../..\.....|.......|.........../......................-...-...
......../................./........./.....\.....|.....\......\|....../\\\\................|.....\/-/.........-..
../..--......../.-............./.....-..-......../.\..\..........|.-.............................--...../....\
.......-..\......|....\....\....................../.........................-.......\........../..............
.-..........-..../.|........./.......|.....\......-....................../...................-...../.-.\......
...........|......................./.....-......./......|.|............-.....\..\./\.../..../....\........../.
........-..../.......-..../...............................-......|.......-..|..|...-.......-..................
........................|..|.|...........|.................................|\........|...|....................
...........\...............................-........-...\..../|..-.......................././.........\...-...
....|..\............................................|...--..-|............................\...................
......../.............|........................-....-....../.....................|............../....|/.\\\\....
..............|............-.\......../..|.......|.....-..|.......................\.../..-.|........|....\....
.........-\....../.|...\/-............./.........../.......|........................|.|..........\........../.
.................../.-.....-\|...\..-..-..............-...-................\............/.....................
.-...............|......|.............../.|.....-....\............/.-........................................|
.......|../.......................\.......-/..................../|......\./../.....\.......................\..
..|........................................|...\............................\...........................|.....
......................-..............-...................\.......\...\........................./\../........-.
........................-/.../.../.../....\.........-/...-....|.-.................../.......\.......-.|.......
.\..........//.........................\......\.........../................|.....\.../......................\.
.......|.....\.........\./........-./....../.....................................\.....|..-.......-...........
.........|......................|.............-.../-..|\......../.-.........|..................-..............
...-.......\/.....-......./.............\................../-............\.............-...\.../........|.|...
...-.\........-...........-..../........................-...............\........-\\\\/.../............/...-..|.
.........\\\\-.......-............../.....\......|...............-...........-.....................|-|..../.../\
.........................|./......................./.......................\...\|.......|............/........
.................\................\...............-.../..|/.../......../.....-..-........................\-...
.....-......./............................../................\......-..\.........|\.....|.../.....\...|..../..
-.......-.......|...........................-............|.|...\.................../..-............|........-.
....../.....-..\........-..|................................\-\......../.|...|.-...........|....../....|./../-
.\...../../..../.................../................../......................\......./....-...|-..............
.--/.\.........................../.-........\.....................-.............|............................\
..........--.................../.|..|................................|.................\.........\............
............-..-...-........\.............././..............................|..........-...........\..........
.........................................-........................\.............../.................\.........
...........................|./.......-.-....|.............|........|.|...................../..-...............
'

# input = '.|...\....
# |.-.\.....
# .....|-...
# ........|.
# ..........
# .........\
# ..../.\\\\..
# .-.-/..|..
# .|....-|.\
# ..//.|....
# '


  Beam = Struct.new(:current_point, :direction, :path, :finished, :input) do 
    def finished?
      finished
    end

    def move
      # binding.pry if self.current_point.nil?
      case direction
      when :right
        self.current_point = [self.current_point[0], self.current_point[1] + 1]
      when :down
        self.current_point = [self.current_point[0] + 1, self.current_point[1]]
      when :left
        self.current_point = [self.current_point[0], self.current_point[1] - 1]
      when :up
        self.current_point = [self.current_point[0] - 1, self.current_point[1]]
      end

      # binding.pry if self.current_point == [6,1]
      point = nil
      begin
        point = input[self.current_point[0]][self.current_point[1]]
      rescue NoMethodError
        # puts "rescued"
        self.finished = true
      end

      # binding.pry
      # puts "#{self.current_point} - #{point} - #{point.nil?} - #{self.current_point.any?{_1.negative?}}"

      self.finished = true if (point.nil? || self.current_point.any?{_1.negative?})

      if self.path.include?(self.current_point)
        idx = self.path.index(self.current_point)
        prev_el = self.path[idx-1]
        if self.path.count(prev_el) > 1
          self.finished = true
        end
      end

      return if finished


      path.push(self.current_point.dup)


      # @dirs = [:right/, :down, :left, :up]
  # ((@dirs.index(:up) + 1) % 4)
  # 0
      case point
      when '/'
        case self.direction
        when :right
          self.direction = :up
        when :down
          self.direction = :left
        when :left
          self.direction = :down
        when :up
          self.direction = :right
        end
      when "\\"
        case self.direction
        when :right
          self.direction = :down
        when :down
          self.direction = :right
        when :left
          self.direction = :up
        when :up
          self.direction = :left
        end
      when "|"
        case self.direction
        when :right,:left
          if !$origins.include?("#{self.current_point.to_s}-#{self.direction.to_s}")
            $origins.push("#{self.current_point.to_s}-#{self.direction.to_s}")
            $beams.push(Beam.new(self.current_point, :down, [self.current_point], false, input))
          end
          self.direction = :up
        end
      when '-'
        case self.direction
        when :down, :up
          if !$origins.include?("#{self.current_point.to_s}-#{self.direction.to_s}")
            $origins.push("#{self.current_point.to_s}-#{self.direction.to_s}")
            $beams.push(Beam.new(self.current_point, :right, [self.current_point], false, input))
          end
          self.direction = :left
        end
      end
    end
  end

@input = input.split("\n").map{_1.chars}
pos = []

@input.count.times do |i|
  pos.push([i-1, 0, :right])
  pos.push([i-1, @input.first.count, :left])
end

@input.first.count.times do |i|
  pos.push([0, i-1, :down])
  pos.push([(@input.count-1), i-1, :up])
end

winners = []

pos.each do |starting|

  $origins = []
  $beams = []
  $beams.push(Beam.new([starting[0],starting[1]], starting[2], [], false, @input))
  while !$beams.all?{ _1.finished? } && count < 10_000_000
    $beams.reject{ _1.finished? }.each do |b|
      b.move
    end
  end

  winners.push($beams.reduce([]) {_1.concat(_2.path); _1}.uniq.count)
end


puts winners.max
















